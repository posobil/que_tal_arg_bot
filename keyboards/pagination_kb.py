
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from services.file_handling import get_random_word, get_random_word_ru, get_random_task_3
from database.database import users_db


def create_menu_button() -> ReplyKeyboardBuilder:
    # –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    menu_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    menu_button = KeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é ‚≠ê')
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä, —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ
    # –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 4 –∫–Ω–æ–ø–∫–∏
    menu_builder.row(menu_button)
    return menu_builder.as_markup(resize_keyboard=True)

def create_course_buttons() -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    course_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    course_builder.row(*[InlineKeyboardButton(text=f'–ö—É—Ä—Å A{i}', callback_data=f'course_a{i}') for i in range(1,2)], width=1)
    return course_builder.as_markup(resize_keyboard=True)

def create_weeks_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    weeks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    weeks_builder.row(*[InlineKeyboardButton(text=f'–ù–µ–¥–µ–ª—è {i}', callback_data=f'week_{i}') for i in range(1,2)], width=1)
    return weeks_builder.as_markup(resize_keyboard=True)

def create_days_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(*[InlineKeyboardButton(text=f'–î–µ–Ω—å {i}', callback_data=f'day_{i}') for i in range(1,2)], width=1)
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_task_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    tasks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_dict: InlineKeyboardButton = InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ üìÉ',
                                                              callback_data='dict1')
    button_esrus : InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ Espa√±ol-–†—É—Å—Å–∫–∏–π üá¶üá∑üá∑üá∫',
                                                               callback_data='esp1')
    button_ruses: InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –†—É—Å—Å–∫–∏–π-Espa√±ol üá∑üá∫üá¶üá∑',
                                                              callback_data='rus1')
    button_estask: InlineKeyboardButton = InlineKeyboardButton(text='–í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º—É –≥–ª–∞–≥–æ–ª–∞ üá¶üá∑',
                                                              callback_data='task_3')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    tasks_builder.row(button_dict, width=1)
    tasks_builder.row(button_esrus, width=1)
    tasks_builder.row(button_ruses, width=1)
    tasks_builder.row(button_estask, width=1)
    tasks_builder.row(back_button, width=1)
    return tasks_builder.as_markup(resize_keyboard=True)

def create_answer_buttons(callback: CallbackQuery, ruwords) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    word = ruwords[users_db[callback.from_user.id]['word']]
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    l = get_random_word(word, ruwords)
    days_builder.row(*[InlineKeyboardButton(text=f'{key}', callback_data=f'{value}') for key, value in l.items()], width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_ru_answer_buttons(callback: CallbackQuery, eswords) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    word = eswords[users_db[callback.from_user.id]['word']]
    ru_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    l = get_random_word_ru(word, eswords)
    ru_builder.row(*[InlineKeyboardButton(text=f'{key}', callback_data=f'{value}') for key, value in l.items()], width=1)
    return ru_builder.as_markup(resize_keyboard=True)

def create_task3_answer_buttons(callback: CallbackQuery, esansw2) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    word = esansw2[users_db[callback.from_user.id]['word']]
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    l = get_random_task_3(word, esansw2)
    days_builder.row(*[InlineKeyboardButton(text=f'{key}', callback_data=f'{value}') for key, value in l.items()], width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_back_button(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)





